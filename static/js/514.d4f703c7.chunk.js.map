{"version":3,"file":"static/js/514.d4f703c7.chunk.js","mappings":"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","sources":["api/api.jsx","components/cast/castStyles.jsx","components/cast/cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'd4361d7b577744dc7974c40231de896b';\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results; \n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchActors = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { createUseStyles } from \"react-jss\";\n\nexport const useStyles = createUseStyles({\n    list: {\n      listStyleType: \"none\",\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      gap: 15,\n      paddingTop: 15,\n      justifyContent: \"center\",\n      borderTop: \"3px solid #ffe454b0\",\n      marginTop: 15,\n    },\n    listItem: {\n      width: \"calc((100% - 15px * 4) / 5)\",\n\n      \"@media screen and (max-width: 1024px)\": {\n        width: \"calc((100% - 15px * 3) / 4)\",\n      },\n\n      \"@media screen and (max-width: 768px)\": {\n        width: \"calc((100% - 15px) / 2)\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }\n    },\n    listItemImage: {\n      width: \"100%\",\n      objectFit: \"cover\",\n      borderRadius: 8,\n      boxShadow: \"0px 4px 10px 0px rgba(9, 9, 9, 0.61)\",\n      height: 300,\n      objectPosition: \"top\",\n\n      \"@media screen and (max-width: 768px)\": {\n        height: \"65vw\"\n      },\n    },\n    listItemInfo: {\n      \"@media screen and (max-width: 768px)\": {\n        flexGrow: 1,\n      },\n    },\n    name: {\n      fontWeight: 700,\n      fontSize: 18,\n      marginBottom: 4,\n      marginTop: 4,\n      textAlign:  \"center\",\n\n      \"@media screen and (max-width: 768px)\": {\n        fontSize: 14,\n      },\n    },\n    character: {\n      maxWidth: \"fit-content\",\n      margin: \"auto\",\n      fontWeight: 600,\n      background: \"#ffe454b0\",\n      padding: \"4px 8px\",\n      borderRadius: 4,\n      fontSize: 16,\n      textAlign: \"center\",\n\n      \"@media screen and (max-width: 768px)\": {\n        fontSize: 12,\n      },\n    },\n});\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchActors } from 'api/api';\nimport Loader from 'components/loader/loader';\nimport { useStyles } from './castStyles';\n\nconst Cast = () => {\n  const classes = useStyles(); \n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const onActorsOfMovie = () => {\n      setLoading(true);\n\n      fetchActors(movieId)\n        .then(actors => {\n          setActors(actors);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    onActorsOfMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n\n      <ul className={classes.list}>\n        {actors.map(({ id, profile_path, original_name, name, character }) => (\n          <li className={classes.listItem} key={id}>\n            <img\n              className={classes.listItemImage}\n              width=\"200px\"\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : `https://t3.ftcdn.net/jpg/00/36/94/26/360_F_36942622_9SUXpSuE5JlfxLFKB1jHu5Z07eVIWQ2W.jpg`\n              }\n              alt={original_name}\n            />\n            <div className={classes.listItemInfo}>\n              <p className={classes.name}>{name}</p>\n              <p className={classes.character}>{character}</p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default Cast;\n"],"names":["axios","API_KEY","fetchTrending","response","data","results","console","log","fetchSearchByKeyword","keyword","fetchMovieDetails","movieId","fetchActors","cast","fetchReviews","useStyles","createUseStyles","list","listStyleType","display","flexWrap","gap","paddingTop","justifyContent","borderTop","marginTop","listItem","width","flexDirection","listItemImage","objectFit","borderRadius","boxShadow","height","objectPosition","listItemInfo","flexGrow","name","fontWeight","fontSize","marginBottom","textAlign","character","maxWidth","margin","background","padding","classes","useParams","useState","actors","setActors","loading","setLoading","useEffect","then","catch","error","finally","className","map","id","profile_path","original_name","src","alt"],"sourceRoot":""}